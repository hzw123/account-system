server:
  port: 8888
spring:
  application:
    name: account-system

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/pay_system?useUnicode=true&characterEncoding=utf-8
    username: root
    password: root
    initialSize: 5    # 初始化大小
    minIdle: 5        # 最小
    maxActive: 200     # 最大
    maxWait: 60000    # 获取连接等待超时的时间
    timeBetweenEvictionRunsMillis: 60000    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 300000      # 配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true                    # 打开PSCache
    maxPoolPreparedStatementPerConnectionSize: 20   # 指定每个连接上PSCache的大小
    filters: stat,wall,log4j                        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    poolPreparedStatements: false
    maxPoolPreparedStatementPerConnectionSize: 30
#    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    connectionProperties: config.decrypt=false

  resources:
    static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

  quartz:
    properties:
      org:
        quartz:
          scheduler:
            instanceName: recordBillJob
            instanceId: instance_one
            skipUpdateCheck: true
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 5
            threadPriority: 5
          jobStore:
            misfireThreshold: 60000
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: true
            clusterCheckinInterval: 10000
            useProperties: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
        #数据库方式
    job-store-type: jdbc
    jdbc:
      initialize-schema: embedded


  freemarker:
    template-loader-path: classpath:/templates/
    suffix: .ftl
    charset: utf-8
    request-context-attribute: request

  dubbo:
    application:
      name: account-service
      owner: dubbo-consumer
    registry:
      protocol: zookeeper
      address: zookeeper://127.0.0.1:2181
      port: 2181
      username:
      password:
    protocol:
      name: dubbo
      host: 127.0.0.1
      port: 20880
    provider:
      retries: 0
#
#  redis:
#    host: 127.0.0.1
#    port: 6379

mybatis:
  mapper-locations: classpath:/mappers/*.xml
  type-aliases-package: cn.mauth.account.core.model
  config-location: classpath:/sqlMapConfig.xml

logging:
  file: ./log/${spring.application.name}.log
